Print two space-separated long integers denoting the respective minimum and maximum values that can be calculated by 
summing exactly four of the five integers. (The output can be greater than a 32 bit integer.)
Sample Input

1 2 3 4 5
Sample Output

10 14
Explanation

Our initial numbers are , , , , and . We can calculate the following sums using four of the five integers:

If we sum everything except , our sum is .
If we sum everything except , our sum is .
If we sum everything except , our sum is .
If we sum everything except , our sum is .
If we sum everything except , our sum is .

-----------------------------------------------------------------
import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

public class Solution {//1 2 3 4 5

    // Complete the miniMaxSum function below.
    static void miniMaxSum(double[] arr) {
      double [] sumArray=new double[arr.length];
        double sum=0;
        for(int i=0;i<arr.length;i++){
            sumArray[i]=sumDigit(arr[i],arr);
        }
       for(int i=0;i<sumArray.length;i++) {  //arr.length=5  
              double temp=0;
              for(int j=1;j<sumArray.length;j++) {  //  arr.length-a=4
                 //sorting logic  
                  if(sumArray[j-1]>sumArray[j]) {    
                      temp=sumArray[j-1];
                      sumArray[j-1]=sumArray[j];
                      sumArray[j]=temp;
                  }//if
              }//inner for loop
          }//outer for loop
           System.out.println((long)sumArray[0]+" "+(long)sumArray[sumArray.length-1]);
           


    }
    static double sumDigit(double ar,double [] arr){
         System.out.println(ar);
        double sum=0;
         for(int i=0;i<arr.length;i++){
             if(ar==arr[i])
            continue;
              sum=sum+arr[i];
        }
        return sum;
    }
    private static final Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) {
       // double[] arr = new double[5];
         double[] arr ={5,5,5,5,5};
      /*  String[] arrItems = scanner.nextLine().split(" ");
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        for (int i = 0; i < 5; i++) {
            double arrItem = Double.parseDouble(arrItems[i]);
            arr[i] = arrItem;
        }*/

        miniMaxSum(arr);

        scanner.close();
    }
}
