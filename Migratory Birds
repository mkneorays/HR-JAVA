Sample Input 0

6
1 4 4 4 5 3
Sample Output 0

4
Explanation 0

The different types of birds occur in the following frequencies:

Type 1 : 1 bird
Type  2: 0 birds
Type 3:1  bird
Type 4:3  birds
Type 5:1  bird
The type number that occurs at the highest frequency is type4 , so we print  4 as our answer
------------------------------------------------------------------------------------------------------------------

import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;

public class Solution {

    // Complete the migratoryBirds function below.
    static int migratoryBirds(List<Integer> arr) {  //   1 4 4 4 5 3
       Map  map=new HashMap();int key=1;
        Collections.sort(arr);         //   [1, 3, 4, 4, 4, 5]     4(o/p)
        //System.out.println(arr+"  "+arr.get(0));
         for(int i=0;i<arr.get(arr.size()-1);i++){
             int val=0;
                for(int j=0;j<arr.size();j++){
                     if(key==arr.get(j))
                       val++;
                }// inner for loop
                map.put(key,val);
                key++;
         }//for
       // now i have to comapre

        System.out.println(map);
      return 0;
    }

    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int arrCount = Integer.parseInt(bufferedReader.readLine().trim());

        List<Integer> arr = Stream.of(bufferedReader.readLine().replaceAll("\\s+$", "").split(" ")).map(Integer::parseInt)
        .collect(toList());
       // List<Integer> arr= Arrays.asList(new Integer[]{1, 2, 3 ,4, 5, 4 ,3 ,2 ,1 ,3, 4});
        int result = migratoryBirds(arr);

        bufferedWriter.write(String.valueOf(result));
        bufferedWriter.newLine();

        bufferedReader.close();
        bufferedWriter.close();
    }
}
